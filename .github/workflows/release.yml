name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  build-linux:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-unknown-linux-gnu
          override: true

      - name: Build
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Package
        run: tar -czvf which-allowed-linux.tar.gz -C target/x86_64-unknown-linux-gnu/release which-allowed

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: which-allowed-linux.tar.gz
          asset_name: which-allowed-linux.tar.gz
          asset_content_type: application/gzip

  build-macos-x86_64:
    runs-on: macos-latest
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: brew install cmake

      - name: Install Xcode Command Line Tools
        run: sudo xcode-select --install || true

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-apple-darwin
          override: true

      - name: Set Environment Variables
        run: |
          echo CARGO_TARGET_X86_64_APPLE_DARWIN_RUSTFLAGS="-C link-arg=-undefined -C link-arg=dynamic_lookup" >> $GITHUB_ENV
          echo MACOSX_DEPLOYMENT_TARGET=10.7 >> $GITHUB_ENV

      - name: Build
        run: cargo build --release --target x86_64-apple-darwin

      - name: Package
        run: tar -czvf which-allowed-macos-x86_64.tar.gz -C target/x86_64-apple-darwin/release which-allowed

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: which-allowed-macos-x86_64.tar.gz
          asset_name: which-allowed-macos-x86_64.tar.gz
          asset_content_type: application/gzip

  build-macos-aarch64:
    runs-on: macos-latest
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: brew install cmake

      - name: Install Xcode Command Line Tools
        run: sudo xcode-select --install || true

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: aarch64-apple-darwin
          override: true

      - name: Set Environment Variables
        run: |
          echo CARGO_TARGET_AARCH64_APPLE_DARWIN_RUSTFLAGS="-C link-arg=-undefined -C link-arg=dynamic_lookup" >> $GITHUB_ENV
          echo MACOSX_DEPLOYMENT_TARGET=10.7 >> $GITHUB_ENV

      - name: Build
        run: cargo build --release --target aarch64-apple-darwin

      - name: Package
        run: tar -czvf which-allowed-macos-aarch64.tar.gz -C target/aarch64-apple-darwin/release which-allowed

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: which-allowed-macos-aarch64.tar.gz
          asset_name: which-allowed-macos-aarch64.tar.gz
          asset_content_type: application/gzip

  build-windows:
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true

      - name: Install Dependencies
        run: choco install mingw

      - name: Build
        run: cargo build --release --target x86_64-pc-windows-gnu

      - name: Package
        run: Compress-Archive -Path target\x86_64-pc-windows-gnu\release\which-allowed.exe -DestinationPath which-allowed-windows.zip

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: which-allowed-windows.zip
          asset_name: which-allowed-windows.zip
          asset_content_type: application/zip
